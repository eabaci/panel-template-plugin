import React, { PureComponent } from 'react';
import { Themeable, DisplayValue } from '../../types';
export interface BigValueSparkline {
    data: any[][];
    minX: number;
    maxX: number;
    full: boolean;
    fillColor: string;
    lineColor: string;
}
export interface Props extends Themeable {
    height: number;
    width: number;
    value: DisplayValue;
    prefix?: DisplayValue;
    suffix?: DisplayValue;
    sparkline?: BigValueSparkline;
    backgroundColor?: string;
}
export declare class BigValue extends PureComponent<Props> {
    canvasElement: any;
    componentDidMount(): void;
    componentDidUpdate(): void;
    draw(): void;
    renderText: (value?: DisplayValue | undefined, padding?: string | undefined) => React.ReactNode;
    renderSparkline(sparkline: BigValueSparkline): JSX.Element;
    render(): JSX.Element;
}
