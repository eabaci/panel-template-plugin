import { DataFrame, Vector } from '../types/index';
/**
 * This abstraction will present the contents of a DataFrame as if
 * it were a well typed javascript object Vector.
 *
 * NOTE: The contents of the object returned from `view.get(index)`
 * are optimized for use in a loop.  All calls return the same object
 * but the index has changed.
 *
 * For example, the three objects:
 *   const first = view.get(0);
 *   const second = view.get(1);
 *   const third = view.get(2);
 * will point to the contents at index 2
 *
 * If you need three different objects, consider something like:
 *   const first = { ... view.get(0) };
 *   const second = { ... view.get(1) };
 *   const third = { ... view.get(2) };
 */
export declare class DataFrameView<T = any> implements Vector<T> {
    private data;
    private index;
    private obj;
    constructor(data: DataFrame);
    readonly length: number;
    get(idx: number): T;
    toArray(): T[];
    toJSON(): T[];
}
