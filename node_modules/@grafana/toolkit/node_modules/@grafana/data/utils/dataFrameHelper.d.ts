import { Field, FieldType, DataFrame, FieldDTO, DataFrameDTO } from '../types/dataFrame';
import { Labels, QueryResultMeta } from '../types/data';
export declare class DataFrameHelper implements DataFrame {
    refId?: string;
    meta?: QueryResultMeta;
    name?: string;
    fields: Field[];
    labels?: Labels;
    length: number;
    private fieldByName;
    private fieldByType;
    constructor(data?: DataFrame | DataFrameDTO);
    addFieldFor(value: any, name?: string): Field;
    /**
     * Reverse the direction of all fields
     */
    reverse(): void;
    private updateTypeIndex;
    addField(f: Field | FieldDTO): Field;
    /**
     * This will add each value to the corresponding column
     */
    appendRow(row: any[]): void;
    /**
     * Add any values that match the field names
     */
    appendRowFrom(obj: {
        [key: string]: any;
    }): void;
    getFields(type?: FieldType): Field[];
    hasFieldOfType(type: FieldType): boolean;
    getFirstFieldOfType(type: FieldType): Field | undefined;
    hasFieldNamed(name: string): boolean;
    /**
     * Returns the first field with the given name.
     */
    getFieldByName(name: string): Field | undefined;
}
