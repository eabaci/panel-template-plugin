import { DataFrame, FieldConfig, DisplayValue, GraphSeriesValue } from '@grafana/data';
import { GrafanaTheme, InterpolateFunction } from '../types/index';
export interface FieldDisplayOptions {
    values?: boolean;
    limit?: number;
    calcs: string[];
    defaults: FieldConfig;
    override: FieldConfig;
}
export declare const VAR_SERIES_NAME = "__series_name";
export declare const VAR_FIELD_NAME = "__field_name";
export declare const VAR_CALC = "__calc";
export declare const VAR_CELL_PREFIX = "__cell_";
export interface FieldDisplay {
    name: string;
    field: FieldConfig;
    display: DisplayValue;
    sparkline?: GraphSeriesValue[][];
}
export interface GetFieldDisplayValuesOptions {
    data?: DataFrame[];
    fieldOptions: FieldDisplayOptions;
    replaceVariables: InterpolateFunction;
    sparkline?: boolean;
    theme: GrafanaTheme;
}
export declare const DEFAULT_FIELD_DISPLAY_VALUES_LIMIT = 25;
export declare const getFieldDisplayValues: (options: GetFieldDisplayValuesOptions) => FieldDisplay[];
/**
 * Returns a version of the field with the overries applied.  Any property with
 * value: null | undefined | empty string are skipped.
 *
 * For numeric values, only valid numbers will be applied
 * for units, 'none' will be skipped
 */
export declare function applyFieldProperties(field: FieldConfig, props?: FieldConfig): FieldConfig;
export declare function getFieldProperties(...props: FieldConfig[]): FieldConfig;
