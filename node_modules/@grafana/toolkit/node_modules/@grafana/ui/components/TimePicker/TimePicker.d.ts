import React, { PureComponent } from 'react';
import { TimeRange, TimeOption, TimeZone, SelectableValue } from '@grafana/data';
export interface Props {
    value: TimeRange;
    selectOptions: TimeOption[];
    timeZone?: TimeZone;
    onChange: (timeRange: TimeRange) => void;
    onMoveBackward: () => void;
    onMoveForward: () => void;
    onZoom: () => void;
}
export declare const defaultSelectOptions: TimeOption[];
export interface State {
    isCustomOpen: boolean;
}
export declare class TimePicker extends PureComponent<Props, State> {
    pickerTriggerRef: React.RefObject<HTMLDivElement>;
    state: State;
    mapTimeOptionsToSelectableValues: (selectOptions: TimeOption[]) => {
        label: string;
        value: TimeOption;
    }[];
    onSelectChanged: (item: SelectableValue<TimeOption>) => void;
    onCustomChange: (timeRange: TimeRange) => void;
    onCloseCustom: () => void;
    render(): JSX.Element;
}
