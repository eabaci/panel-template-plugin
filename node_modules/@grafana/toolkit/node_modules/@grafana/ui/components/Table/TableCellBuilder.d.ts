import { ReactElement } from 'react';
import { GridCellProps } from 'react-virtualized';
import { Table, Props } from './Table';
import { Field, FieldConfig } from '@grafana/data';
export interface TableCellBuilderOptions {
    value: any;
    column?: Field;
    row?: any[];
    table?: Table;
    className?: string;
    props: GridCellProps;
}
export declare type TableCellBuilder = (cell: TableCellBuilderOptions) => ReactElement<'div'>;
/** Simplest cell that just spits out the value */
export declare const simpleCellBuilder: TableCellBuilder;
export interface ColumnStyle {
    pattern: string;
    alias?: string;
    colorMode?: 'cell' | 'value';
    colors?: any[];
    decimals?: number;
    thresholds?: any[];
    type?: 'date' | 'number' | 'string' | 'hidden';
    unit?: string;
    dateFormat?: string;
    sanitize?: boolean;
    mappingType?: any;
    valueMaps?: any;
    rangeMaps?: any;
    link?: any;
    linkUrl?: any;
    linkTooltip?: any;
    linkTargetBlank?: boolean;
    preserveFormat?: boolean;
}
export declare function getCellBuilder(schema: FieldConfig, style: ColumnStyle | null, props: Props): TableCellBuilder;
